/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


// Genome preparation options


process {
    withName: 'GUNZIP' {
        publishDir = [
            path: { "${params.outdir}/annotation" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_FAIDX' {
        publishDir = [
            path: { "${params.outdir}/annotation" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'RIBOSEQ:PREPARE_RIBOSEQ_REFERENCE:GENERATE_REFERENCE_INDEX:BOWTIE2_BUILD' {
        publishDir = [
            path: { "${params.outdir}/annotation/bowtie2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    if (!params.star_index) {

        withName: 'RIBOSEQ:PREPARE_RIBOSEQ_REFERENCE:GENERATE_REFERENCE_INDEX:STAR_GENOMEGENERATE' {
            ext.args = '--sjdbGTFfeatureExon exon --sjdbOverhang 100'
            publishDir = [
                path: { "${params.outdir}/annotation/star" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
    
    withName: 'RIBOSEQ:FASTQC' {
        publishDir = [
            path: { "${params.outdir}/fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

